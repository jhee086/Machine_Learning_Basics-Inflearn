<1> 머신러닝의 개념 및 정의

<머신러닝>
    : 컴퓨터가 스스로 학습할 수 있는 능력을 제공하는 것
    : 컴퓨터가 작업을 할 때 경험으로부터 학습하여 성능에 대한 측정을 향상시키는 학문

<머신러닝 학습 종류>
    A. 지도 학습: 올바른 데이터 정답(레이블)을 제공하여 학습하는 것
        1. 분류
            -> 이진: Y or N
            -> 다진: 여러개 중에 분류하기 
        2. 회귀: 연속적인 값 찾기
            -> 예측 (예측변수(feature)를 이용하여)
        ex) KMA, 선형회귀, SAM(Serverless Application Model), dicision tree

    B. 비지도 학습: =input 데이터에 대해서 올바른 정답이 없는 데이터 집합을 학습하는 것
        1. 군집
            -> 비슷한 특성을 하나의 클러스터로 만드는 것
        2. 시각화
        ex) K means, 계층 군집, 시각화+차원축소: PCA

    ( C. 준지도 학습: 지도 학습 + 비지도 학습 )

    D. 강화학습: agent, 환경, 보상, 상태
        -> 환경을 탐색하면서 상태를 취하는 것
        -> 올바른 행동 시 보상부여
        -> 보상이 극대화할 수 있도록 agent움직임
        ex) agent가 행동과 보상의 상호작용을 만듦

<머신러닝 vs 프로그래밍 vs 자동화>
    A. 프로그래밍: input과 output을 짤 수 있음
    B. 머신러닝: input output 데이터로 규칙과 패턴을 찾으면서 프로그래밍
    C. 자동화: 똑같은 작업을 반복

<일반화>
    : training 데이터와 input 데이터가 달라져도 똑같은 성능을 출력하기 위한 목적
    : training 데이터 -> 모델링

    * 제대로 되지 않을 경우 2가지 문제
    A. 과대적합: training 데이터는 잘 적용되지만 input데이터는 잘 맞지 않음
        -> 딥러닝에서 주의해야할 사항
        해결방안
            1) 훈련데이터 더 많이
            2) 정규화
            3) 훈련데이터 잡음 줄이기
    B. 과소적합: 너무 단순해서 데이터 내제된 구조를 학습하지 못함
        해결방안
            1) 파라미터 많은 복잡한 모델 선택
            2) 모델의 제약 줄이기
            3) 충분한 학습(조기종료 시점까지)



<2> 머신러닝 원리 및 이론 배우기

<용어>
    1. 모델: 데이터들이 잘 부합하고 잘 예측할 수 있는 가정
        * 좋은 모델이란? 데이터들의 패턴을 잘 학습한 모델
    2. 특성: 데이터를 설명하는 입력 변수
    3. 레이블: 예측하는 실제 항목 
    4. 추론: 학습된 모델을 사용하여 새로운 데이터 적용 & 예측

<라이브러리> 
: 머신러닝 언어: python, R, spss, matlab, excel
: python: 머신러닝 라이브러리 존재 

    1. Numpy: 행렬 
        import numpy as np
        data = [1,2,3,4,5] # list(python)
        arr = np.array(data) # 행렬 형태로 바꿔줌
        arr.shape # dk
        arr.dtype
        np.zeros((9,2)) # 9행 2열
        np.arange(20) # 0부터 시작하는 1일 증가 수열

    2. Pandas: 데이터 다루고 분석 (Series, DataFrame)
        import pandas as pd
        # Series: index가 있는 1차원 배열, data frame 컬럼이 series, index가 왼쪽
        pd.Series([1,2,3,4,5]) 
        student_name = ["John", "Green", "Anna", "Lia"]
        math = [99, 35, 98, 34]
        # Data Frame
        result = pd.DataFrame({
            "Name": student_name,
            "Math" : math
        })
        result.head(2) # 상위 2개 출력

    3. Matplotlib: 시각화
        import matplotlib.pyplot as plt
        plt.bar(student_name, math)

    4. Scikit-learn: 지도, 비지도 학습 시 모델 만들 때 사용

    5. NLTK: 자연어 처리(ML), 토큰화(나눌 수 없는 언어 기본요소)
        ex) 챗봇, 번역
